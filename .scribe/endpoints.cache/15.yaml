## Autogenerated by Scribe. DO NOT MODIFY.

name: 'Attendance management'
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: 'connector/api/get-attendance/{user_id}'
    metadata:
      groupName: 'Attendance management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get Attendance'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {access_token}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      user_id:
        name: user_id
        description: 'id of the user'
        required: true
        example: '1'
        type: string
        custom: []
    cleanUrlParameters:
      user_id: '1'
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
          "data": {
          "id": 4,
          "user_id": 1,
          "business_id": 1,
          "clock_in_time": "2020-09-12 13:13:00",
          "clock_out_time": "2020-09-12 13:15:00",
          "essentials_shift_id": 3,
          "ip_address": null,
          "clock_in_note": "test clock in from api",
          "clock_out_note": "test clock out from api",
          "created_at": "2020-09-12 13:14:39",
          "updated_at": "2020-09-12 13:15:39"
          }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 145b3gkvchf8aadP6EZeD6V'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: connector/api/clock-in
    metadata:
      groupName: 'Attendance management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Clock In'
      description: '[User must have "essentials.allow_users_for_attendance_from_api" permission to Clock in]'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {access_token}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      user_id:
        name: user_id
        description: 'id of the user'
        required: true
        example: 1
        type: integer
        custom: []
      clock_in_time:
        name: clock_in_time
        description: 'Clock in time.If not given current date time will be used Fromat: Y-m-d H:i:s'
        required: false
        example: '2000-06-13 13:13:00'
        type: string
        custom: []
      clock_in_note:
        name: clock_in_note
        description: 'Clock in note.'
        required: false
        example: quae
        type: string
        custom: []
      ip_address:
        name: ip_address
        description: 'IP address.'
        required: false
        example: laborum
        type: string
        custom: []
      latitude:
        name: latitude
        description: 'Latitude of the clock in location.'
        required: false
        example: labore
        type: string
        custom: []
      longitude:
        name: longitude
        description: 'Longitude of the clock in location.'
        required: false
        example: sunt
        type: string
        custom: []
    cleanBodyParameters:
      user_id: 1
      clock_in_time: '2000-06-13 13:13:00'
      clock_in_note: quae
      ip_address: laborum
      latitude: labore
      longitude: sunt
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
          "success":true,
          "msg":"Clocked In successfully",
          "type":"clock_in"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 8evaP6b5dE41aDVhkZ6cgf3'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: connector/api/clock-out
    metadata:
      groupName: 'Attendance management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Clock Out'
      description: '[User must have "essentials.allow_users_for_attendance_from_api" permission to Clock out]'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {access_token}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      user_id:
        name: user_id
        description: 'id of the user'
        required: true
        example: 1
        type: integer
        custom: []
      clock_out_time:
        name: clock_out_time
        description: 'Clock out time.If not given current date time will be used Fromat: Y-m-d H:i:s'
        required: false
        example: '2000-06-13 13:13:00'
        type: string
        custom: []
      clock_out_note:
        name: clock_out_note
        description: 'Clock out note.'
        required: false
        example: exercitationem
        type: string
        custom: []
      latitude:
        name: latitude
        description: 'Latitude of the clock out location.'
        required: false
        example: non
        type: string
        custom: []
      longitude:
        name: longitude
        description: 'Longitude of the clock out location.'
        required: false
        example: illo
        type: string
        custom: []
    cleanBodyParameters:
      user_id: 1
      clock_out_time: '2000-06-13 13:13:00'
      clock_out_note: exercitationem
      latitude: non
      longitude: illo
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
          "success":true,
          "msg":"Clocked Out successfully",
          "type":"clock_out"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer h5PVdeb4fkZEDg6aca8v631'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: connector/api/holidays
    metadata:
      groupName: 'Attendance management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'List Holidays'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {access_token}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      location_id:
        name: location_id
        description: 'id of the location'
        required: false
        example: '1'
        type: string
        custom: []
      start_date:
        name: start_date
        description: 'format:Y-m-d'
        required: false
        example: '2020-06-25'
        type: string
        custom: []
      end_date:
        name: end_date
        description: 'format:Y-m-d'
        required: false
        example: '2020-06-25'
        type: string
        custom: []
    cleanQueryParameters:
      location_id: '1'
      start_date: '2020-06-25'
      end_date: '2020-06-25'
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
          "data": [
          {
          "id": 2,
          "name": "Independence Day",
          "start_date": "2020-08-15",
          "end_date": "2020-09-15",
          "business_id": 1,
          "location_id": null,
          "note": "test holiday",
          "created_at": "2020-09-15 11:25:56",
          "updated_at": "2020-09-15 11:25:56"
          }
          ]
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer Pbk5h8a1e6dg4Vc3ZfDEav6'
    controller: null
    method: null
    route: null
    custom: []

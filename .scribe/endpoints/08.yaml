name: 'Table management'
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: connector/api/table
    metadata:
      groupName: 'Table management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'List tables'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {access_token}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      location_id:
        name: location_id
        description: 'id of the location'
        required: false
        example: 1
        type: integer
        custom: []
    cleanQueryParameters:
      location_id: 1
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
          "data": [
          {
          "id": 5,
          "business_id": 1,
          "location_id": 1,
          "name": "Table 1",
          "description": null,
          "created_by": 9,
          "deleted_at": null,
          "created_at": "2020-06-04 22:36:37",
          "updated_at": "2020-06-04 22:36:37"
          }
          ]
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer d3a5EchVPfZek646aDv1g8b'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'connector/api/table/{id}'
    metadata:
      groupName: 'Table management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Show the specified table'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {access_token}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the table.'
        required: true
        example: odio
        type: string
        custom: []
      table:
        name: table
        description: 'comma separated ids of required tables'
        required: true
        example: '5'
        type: string
        custom: []
    cleanUrlParameters:
      id: odio
      table: '5'
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
          "data": [
          {
          "id": 5,
          "business_id": 1,
          "location_id": 1,
          "name": "Table 1",
          "description": null,
          "created_by": 9,
          "deleted_at": null,
          "created_at": "2020-06-04 22:36:37",
          "updated_at": "2020-06-04 22:36:37"
          }
          ]
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 4VkP6avc5Edg1D8aZefb3h6'
    controller: null
    method: null
    route: null
    custom: []
